# Mobb/Checkamrx Fixer on pull requests
# This workflow defines the needed steps to run Checkmarx on every pull request and pass the results to Mobb Fixer.
#
# Secrets in use (add your missing ones):
# CX_TENANT - your Checkmarx tenant name (found in your Checkmarx settings)
# CX_API_TOKEN - your Checkmarx credentials (find how to get it here: https://checkmarx.com/resource/documents/en/34965-68775-generating-a-refresh-token--api-key-.html)
# CX_BASE_URI - your Checkmarx app url, e.g. "https://ast.checkmarx.net/"
# CX_BASE_AUTH_URI - your Checkmarx auth url, e.g. "https://iam.checkmarx.net/"
# MOBB_API_TOKEN - your mobb user credentials (autumatially set if you used the Mobb app to configure the integration)
# GITHUB_TOKEN - automatically set by GitHub

name: "Mobb/Checkmarx"

on:
  pull_request:
    branches: ["*"]

jobs:
  # This workflow contains a single job called "build"
  build:
    name: CHECKMARX
    # The type of runner that the job will run on - Ubuntu is required as Docker is leveraged for the action
    permissions:
      contents: read # for actions/checkout to fetch code
      issues: write # for checkmarx-ts/checkmarx-cxflow-github-action to write feedback to github issues
      pull-requests: write # for checkmarx-ts/checkmarx-cxflow-github-action to write feedback to PR
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    runs-on: ubuntu-latest

    # Steps require - checkout code, run CxFlow Action, Upload SARIF report (optional)
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    # Runs the Checkmarx Scan leveraging the latest version of CxFlow - REFER to Action README for list of inputs
    - name: Checkmarx CxFlow Action
      uses: checkmarx-ts/checkmarx-cxflow-github-action@v1.9
      with:
        project: ${{ github.repository }}-PR
        team: /CxServer/Mobb
        checkmarx_url: ${{ secrets.CHECKMARX_URL }}
        checkmarx_username: ${{ secrets.CHECKMARX_USERNAME }}
        checkmarx_password: ${{ secrets.CHECKMARX_PASSWORD }}
        checkmarx_client_secret: ${{ secrets.CHECKMARX_CLIENT_SECRET }}
        scanners: sast
        break_build: true
        incremental: false
        bug_tracker: Json
        preset: All
        params: '--namespace=${{ github.repository_owner }} --repo-name=${{ github.event.repository.name }} --branch=${{ github.ref }} --merge-id=${{ github.event.number }} --logging.level.com.checkmarx.*=DEBUG --cx-flow.filterSeverity --cx-flow.filterCategory --checkmarx.version=9.0 --checkmarx.preserve-xml=true --cx-xml.file-name-format=report.xml --cx-xml.data-folder=./ --sca.preserve-xml=true --cx-flow.bug-tracker-impl=CxXml' 
        #  --checkmarx.preserve-xml=true --cx-xml.file-name-format=report.xml --cx-xml.data-folder=./   
    - name: Archive report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: sast-report
        path: cx.sarif
    - name: Archive report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: cx-log
        path: cx-flow.log
    - name: Archive report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: Zips
        path: /*.zip
    - name: Check Environment
      if: always()
      run:
        env
        ls -l
      shell: bash -l {0}
